@model Galleria.ViewModels.IndexViewModel

@{
    ViewBag.Title = "List";
}

@section topnav {
    <ul class="btn-nav pull-right">
        <li>
            <div class="btn-group" data-toggle="buttons-radio">
                <a href="@Url.Action("Index", "Home")" class="btn btn-success active">list</a>
                <a href="@Url.Action("Map", "Home")" class="btn btn-success">map</a>
            </div>
        </li>
        <li><a href="@Url.Action("Upload", "Home")" class="btn btn-primary">add pictures</a></li>
    </ul>
}

<div class="row">
    <ul class="imageList" data-bind="template: { name: 'picture-template', foreach: processedImages }">
    </ul>
    <script type="text/html" id="picture-template">
        <li>
            <div class="imageSurround">
                <a data-bind="attr: { 'href': '@(Url.Action("Index", "Slideshow"))?startImageId=' + Id }">
                    <img class="lazyImage" data-bind="attr: { src: LazyLoadPlaceholderUrl, 'data-original': PreviewUrl }" />
                </a>
                <div class="name"><span data-bind="text: Name">&nbsp;</span><a data-bind="click: showEditDialog" href="#" data-target="#imageEditForm"><i class="glyphicon glyphicon-pencil"></i></a></div>
            </div>
        </li>
    </script>
</div>
<div id="model-form" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="editFormLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div id="modal-content-container" class="modal-content">
        </div>
    </div>
</div>

@section scripts
{
    @Scripts.Render("~/bundles/homepage")
    <script type="text/javascript" src="~/signalr/hubs"></script>
    <script type="text/javascript">
        var viewModel;

        $(function () {
            // Proxy created on the fly          
            var pictureprocesshub = $.connection.pictureProcessHub;

            // Declare a function on the chat hub so the server can invoke it          
            pictureprocesshub.client.pictureprocessed = function (image) {
                image.LazyLoadUrl = image.PreviewUrl;
                viewModel.processedImages.push(image);
                $("img.lazyImage").lazyload();
            };

            // Start the connection
            $.connection.hub.start();


            viewModel = { processedImages: ko.observableArray([]) }
            ko.applyBindings(viewModel);

            ko.utils.arrayPushAll(viewModel.processedImages(), @Model.ImageCollectionJson);
            viewModel.processedImages.valueHasMutated();

            $("img.lazyImage").lazyload({
                effect: "fadeIn"
            });


            $("a[data-modalform]").click(function () {
                showEditDialog($(this));
                return false;
            });
        });

        function showEditDialog(src)
        {
            var href = '/ImageDetails/Edit?Id=' + src.Id;;
            //load destination via ajax
            $.get(href, function (data) {
                //inject into modal container
                $("#modal-content-container").html(data);
                $('#model-form').modal();
            })

            return false;
        }

        function hideEditDialog()
        {
            $('#model-form').modal('hide')
        }
    </script>
}
